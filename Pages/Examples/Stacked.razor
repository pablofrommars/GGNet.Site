@namespace GGNet.Site.Pages
@page "/examples/stacked"

@using GGNet
@using GGNet.Components
@using GGNet.Formats
@using GGNet.Datasets

    <div class="container-fluid mt-4">

        <div class="row m-4">

            <div class="col-md-6">
                <h2>Stacked Barplot</h2>
                <p>Display cummulative values for discrete groupings</p>

<Code>
<FSharp>
<span class="pl-smi">Plot</span>.<span class="pl-en">New</span>(<span class="pl-smi">source</span>, <span class="pl-smi">x</span> <span class="pl-k">=</span> <span class="pl-smi">X</span>, <span class="pl-smi">y</span> <span class="pl-k">=</span> (<span class="pl-smi">fun</span> <span class="pl-smi">o</span> <span class="pl-k">-</span><span class="pl-k">&gt;</span> <span class="pl-smi">float</span> <span class="pl-smi">o</span>.<span class="pl-smi">N</span>))
    .<span class="pl-en">Geom_Bar</span>(<span class="pl-smi">position</span> <span class="pl-k">=</span> <span class="pl-smi">PositionAdjustment</span>.<span class="pl-smi">Stack</span>, <span class="pl-smi">width</span> <span class="pl-k">=</span> <span class="pl-c1">0.5</span>)
    .<span class="pl-en">Scale_X_Discrete</span>(<span class="pl-smi">expand</span> <span class="pl-k">=</span> <span class="pl-smi">Plot</span>.<span class="pl-en">Expand</span>(<span class="pl-c1">0.0</span>, <span class="pl-c1">0.1</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.1</span>)), <span class="pl-smi">formatter</span> <span class="pl-k">=</span> <span class="pl-smi">labeller</span>)
    .<span class="pl-en">Scale_Fill_Discrete</span>((<span class="pl-smi">fun</span> <span class="pl-smi">o</span> <span class="pl-k">-</span><span class="pl-k">&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">Name</span>), <span class="pl-smi">Colors</span>.<span class="pl-smi">Brewer</span>.<span class="pl-smi">YlGnBu</span>.[<span class="pl-c1">4</span>], <span class="pl-smi">direction</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>)
    .<span class="pl-en">YLab</span>(<span class="pl-s"><span class="pl-pds">"</span>#<span class="pl-pds">"</span></span>)
    .<span class="pl-en">XLab</span>(<span class="pl-s"><span class="pl-pds">"</span>Year<span class="pl-pds">"</span></span>)
    .<span class="pl-en">Theme</span>(<span class="pl-smi">dark</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>)
</FSharp>
<CSharp>
<span class="pl-smi">Plot</span>.<span class="pl-en">New</span>(<span class="pl-smi">source</span>, <span class="pl-smi">x</span>: <span class="pl-smi">X</span>, <span class="pl-smi">y</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">N</span>)
    .<span class="pl-en">Geom_Bar</span>(<span class="pl-smi">position</span>: <span class="pl-smi">PositionAdjustment</span>.<span class="pl-smi">Stack</span>, <span class="pl-smi">width</span>: <span class="pl-c1">0.5</span>)
    .<span class="pl-en">Scale_X_Discrete</span>(<span class="pl-smi">expand</span>: (<span class="pl-c1">0.0</span>, <span class="pl-c1">0.1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0.1</span>), <span class="pl-smi">formatter</span>: <span class="pl-smi">labeller</span>)
    .<span class="pl-en">Scale_Fill_Discrete</span>(<span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">Name</span>, <span class="pl-smi">Colors</span>.<span class="pl-smi">Brewer</span>.<span class="pl-smi">YlGnBu</span>[<span class="pl-c1">4</span>], <span class="pl-smi">direction</span>: <span class="pl-k">-</span><span class="pl-c1">1</span>)
    .<span class="pl-en">YLab</span>(<span class="pl-s"><span class="pl-pds">"</span>#<span class="pl-pds">"</span></span>)
    .<span class="pl-en">XLab</span>(<span class="pl-s"><span class="pl-pds">"</span>Year<span class="pl-pds">"</span></span>)
    .<span class="pl-en">Theme</span>(<span class="pl-smi">dark</span>: <span class="pl-c1">false</span>)
</CSharp>
</Code>
            </div>

            <div class="col-md-6">
                <div class="border rounded-lg p-1 shadow-sm">
                    <Plot Data=@beatles T=Beatles.Point TX=Double TY=Double />
                </div>
            </div>

        </div>
    </div>

@code {

    Data<Beatles.Point, double, double> beatles;

    protected override void OnInitialized()
    {
        var source = new Source<Beatles.Point>(Beatles.Load()
                .Where(o => o.Year == 2010 || o.Year == 1970 || o.Year == 1930)
                .OrderBy(o => o.Year)
                .ThenBy(o => o.Name));

        double X(Beatles.Point p) => p.Year switch
        {
            1930 => 1.0,
            1970 => 2.0,
            2010 => 3.0,
            _ => throw new ArgumentException()
        };

        var labeller = new Labeller<double>
        {
            [1.0] = "1930",
            [2.0] = "1970",
            [3.0] = "2010"
        };

        var theme = Theme.Default(dark: false);
        theme.Panel.Grid.Major.X.Width = 0;
        theme.Panel.Grid.Minor.X.Width = 0;

        beatles = Plot.New(source, x: X, y: o => o.N)
            .Geom_Bar(position: PositionAdjustment.Stack, width: 0.5)
            .Scale_X_Discrete(expand: (0.0, 0.1, 0, 0.1), formatter: labeller)
            .Scale_Fill_Discrete(o => o.Name, Colors.Brewer.YlGnBu[4], direction: -1)
            .YLab("#")
            .XLab("Year")
            .Theme(theme);
}
}
